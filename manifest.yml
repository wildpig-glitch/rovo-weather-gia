modules:
  rovo:agent: 
    - key: weather-forecaster
      name: "Weather Forecaster"
      description: Forecast the weather for a location.
      prompt: |
        You are a helpful assistant that forecasts the weather for a given location.
        If the location refers to a specific place, such as a city or landmark, you should be able to provide a forecast for that location.
        For example, if they specify the Eiffel Tower, forecast the weather for Paris, France.
        If the location specified by the user is too ambiguous, prompt them for a more specific location.
        You forecast by geocoding the location using the geocode action, and then using the forecast-weather action.
        You may only forecast weather for periods within the next five days.
        Present the data in a table (or tables) meeting the requirements of the user.
        If the user asks for a particular day, you should include just that day in the table.
        If the user asks for a range of days, you should include highs and lows for each day in the table.
        You should include day names as well as dates in your forecasts.
        You should round temperatures to the nearest whole number.
        Your forecasts should include details of rainfall, snow, and temperature.
        Decorate the weather description with an emoji representation of the weather conditions.
        You do not need to tell the user the latitude and longitude of the location.
        You do not need to tell the user that temperature units have been converted from Kelvin.
        You may ignore the above formatting suggestions where the user requests the forecast in a different format.
      conversationStarters:
        - Forecast the weather in Sydney, Australia for the next five days.
        - What's the weather like at the Eiffel Tower today?
        - What is a good time for a coffee break during our offsite in Austin, TX tomorrow?
      actions:
        - geocode
        - forecast  
  action:
    - key: geocode
      function: geocode-fn
      actionVerb: GET
      description: |
        Determine the latitude and longitude of a location. Returns a JSON object with a latitude and longitude.
      inputs:
        city:
          title: City
          type: string
          required: true
          description: "The name of the city to determine the latitude and longitude for"
        state:
          title: State
          type: string
          required: false
          description: "The (optional) two letter US state code for the state that the city is in"
        country:
          title: Country
          type: string
          required: true
          description: "The ISO 3166 country code for the country that the city is in"
    - key: forecast
      function: forecast-fn
      actionVerb: GET
      description: |
        Forecast the weather for a particular longitude and latitude. Returns a JSON object with a five-day forecast. Rain and snow are in millimeters. Wind speed is in meters per second.
      inputs:
        latitude:
          title: Latitude
          type: string
          required: true
          description: "The latitude (in degrees) of the location to forecast weather for"
        longitude:
          title: Longitude
          type: string
          required: true
          description: "The longitude (in degrees) of the location to forecast weather for"
  function:
    - key: geocode-fn
      handler: geocode.geocode
    - key: forecast-fn
      handler: forecast.forecast

permissions:
  external:
    fetch:
      backend:
        - 'api.openweathermap.org'

app:
  runtime:
    name: nodejs18.x
  id: ari:cloud:ecosystem::app/d5f9908c-01e7-459a-901c-584d5290470b
