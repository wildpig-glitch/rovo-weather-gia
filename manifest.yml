modules:
  rovo:agent:
    - key: weather-forecaster
      name: "Weather Forecaster"
      description: Forecast the weather for a location.
      prompt: |
        --- What you do ---
        You are a helpful assistant that forecasts the weather for a given location and provides clothing recommendations.
        You forecast by geocoding a city using the geocode action, and then using the forecast-weather action.
        You can also provide specific outfit suggestions using the clothing-recommendations action based on temperature and weather conditions.
        You can only forecast weather for periods within the next five days.

        --- Determining the city to forecast for ---
        If the user specifies a landmark, you should infer the city to forecast from that landmark.
        For example, if they specify the Eiffel Tower, forecast the weather for Paris, France.
        If the location specified by the user is too ambiguous, prompt them for a more specific location.

        --- What data to display ---
        Present the data in a table (or tables) meeting the requirements of the user.
        If the user asks for a forecast for a single day, you should include all temperatures for that day in the table.
        If the user asks for more than one day, you should only include only the high and low for each day.
        Your forecasts should include details of rainfall, snow, and temperature.

        --- Clothing Recommendations ---
        When users ask for clothing advice or what to wear, use the clothing-recommendations action.
        This action takes temperature, weather description, rain data, and snow data to provide specific outfit suggestions.
        You can combine weather forecasts with clothing recommendations to give comprehensive advice.
        Present clothing recommendations in a clear, organized format including base outfit, outerwear, footwear, and accessories.

        --- Formatting tips ---
        When combining weather descriptions for the same day, describe when during the day the weather will change (e.g. sunny in the morning, light rain in the evening).
        When rendering a date include the day of week, day of month, and month, but omit the year (e.g. Thursday, August 8th).
        You should round temperatures, rainfall, and snow to the nearest whole number.
        For rainfall and snow, if the amount is greater than 0 but less than 1, you should display "<1".
        Decorate the weather description with an emoji representation of the weather conditions.
        When combining weather descriptions, pick a single emoji corresponding to the most severe weather condition referred to (e.g. 🌦️ sunny in the morning, heavy rain in the afternoon)
        You do not need to tell the user the latitude and longitude of the location.
        You may ignore the above formatting suggestions where the user requests the forecast in a different format.
      conversationStarters:
        - Forecast the weather in Sydney, Australia for the next five days.
        - What's the weather like at the Eiffel Tower today?
        - What's the snow like in Tahoe this weekend?
        - What should I wear in New York City tomorrow?
        - What is a good time for a coffee break during our offsite in Austin,
          TX tomorrow?
        - What outfit should I pack for my trip to London this weekend?
      actions:
        - geocode
        - forecast
        - clothing-recommendations
  action:
    - key: geocode
      function: geocode-fn
      actionVerb: GET
      description: |
        Determine the latitude and longitude of a location. Returns a JSON object with a latitude and longitude.
      inputs:
        city:
          title: City
          type: string
          required: true
          description: The name of the city to determine the latitude and longitude for.
        state:
          title: State
          type: string
          required: false
          description: The (optional) two letter US state code for the state that the city
            is in.
        country:
          title: Country
          type: string
          required: true
          description: The ISO 3166 country code for the country that the city is in.
    - key: forecast
      function: forecast-fn
      actionVerb: GET
      description: |
        Forecast the weather for a particular longitude and latitude. Returns a JSON object with a five-day forecast. Rain and snow are in millimeters. Wind speed is in meters per second.
      inputs:
        latitude:
          title: Latitude
          type: string
          required: true
          description: "The latitude (in degrees) of the location to forecast weather for"
        longitude:
          title: Longitude
          type: string
          required: true
          description: "The longitude (in degrees) of the location to forecast weather for"
    - key: clothing-recommendations
      function: clothing-fn
      actionVerb: GET
      description: |
        Provide specific clothing and outfit recommendations based on weather conditions. Takes temperature, weather description, and precipitation data to suggest appropriate clothing.
      inputs:
        temperature:
          title: Temperature
          type: number
          required: true
          description: "The temperature in Celsius for which to provide clothing recommendations"
        description:
          title: Weather Description
          type: string
          required: true
          description: "The weather condition description (e.g., 'light rain', 'sunny', 'snow')"
        rain:
          title: Rain Data
          type: object
          required: false
          description: "Rain precipitation data object (can be null if no rain)"
        snow:
          title: Snow Data
          type: object
          required: false
          description: "Snow precipitation data object (can be null if no snow)"
  function:
    - key: geocode-fn
      handler: geocode.geocode
    - key: forecast-fn
      handler: forecast.forecast
    - key: clothing-fn
      handler: clothing.clothingRecommendations

permissions:
  external:
    fetch:
      backend:
        - 'api.openweathermap.org'

app:
  runtime:
    name: nodejs18.x
  id: ari:cloud:ecosystem::app/58686dd5-f16b-45fd-90e5-2a6231ae9cb1
